{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "DemoApp.svelte",
    "Scatterplot.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Scatterplot from './Scatterplot.svelte';\n\timport data from './data.js';\n    function handleClick() {\n        for (let i = 0; i < data.a.length; i++) {\n            let temp = data.a[i].x;\n            data.a[i].x = data.a[i].y;\n            data.a[i].y = temp;\n        }\n    }\n</script>\n\n<style>\n\t.chart {\n\t\twidth: 100%;\n\t\tmax-width: 640px;\n\t\theight: calc(100% - 4em);\n\t\tmin-height: 280px;\n\t\tmax-height: 480px;\n\t\tmargin: 0 auto;\n\t}\n</style>\n\n<div class=\"chart\">\n\t<Scatterplot points={data.a}/>\n\t<Scatterplot points={data.b}/>\n\t<Scatterplot points={data.c}/>\n\t<Scatterplot points={data.d}/>\n\n    <button on:click={handleClick}>\n        Change Data\n    </button>\n</div>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport { scaleLinear } from 'd3-scale';\n\n\texport let points;\n\n\tlet svg;\n\tlet width = 500;\n\tlet height = 200;\n\n\tconst padding = { top: 20, right: 40, bottom: 40, left: 25 };\n\n\t$: xScale = scaleLinear()\n\t\t.domain([0, 20])\n\t\t.range([padding.left, width - padding.right]);\n\n\t$: yScale = scaleLinear()\n\t\t.domain([0, 12])\n\t\t.range([height - padding.bottom, padding.top]);\n\n\t$: xTicks = width > 180 ?\n\t\t[0, 4, 8, 12, 16, 20] :\n\t\t[0, 10, 20];\n\n\t$: yTicks = height > 180 ?\n\t\t[0, 2, 4, 6, 8, 10, 12] :\n\t\t[0, 4, 8, 12];\n\n\tonMount(resize);\n\n\tfunction resize() {\n\t\t({ width, height } = svg.getBoundingClientRect());\n\t}\n</script>\n\n<svelte:window on:resize='{resize}'/>\n\n<svg bind:this={svg}>\n\t<!-- y axis -->\n\t<g class='axis y-axis'>\n\t\t{#each yTicks as tick}\n\t\t\t<g class='tick tick-{tick}' transform='translate(0, {yScale(tick)})'>\n\t\t\t\t<line x1='{padding.left}' x2='{xScale(22)}'/>\n\t\t\t\t<text x='{padding.left - 8}' y='+4'>{tick}</text>\n\t\t\t</g>\n\t\t{/each}\n\t</g>\n\n\t<!-- x axis -->\n\t<g class='axis x-axis'>\n\t\t{#each xTicks as tick}\n\t\t\t<g class='tick' transform='translate({xScale(tick)},0)'>\n\t\t\t\t<line y1='{yScale(0)}' y2='{yScale(13)}'/>\n\t\t\t\t<text y='{height - padding.bottom + 16}'>{tick}</text>\n\t\t\t</g>\n\t\t{/each}\n\t</g>\n\n\t<!-- data -->\n\t{#each points as point}\n\t\t<circle cx='{xScale(point.x)}' cy='{yScale(point.y)}' r='5'/>\n\t{/each}\n</svg>\n\n<style>\n\tsvg {\n\t\twidth: 50%;\n\t\theight: 50%;\n\t\tfloat: left;\n\t}\n\n\tcircle {\n\t\tfill: orange;\n\t\tfill-opacity: 0.6;\n\t\tstroke: rgba(0,0,0,0.5);\n\t}\n\n\t.tick line {\n\t\tstroke: #ddd;\n\t\tstroke-dasharray: 2;\n\t}\n\n\ttext {\n\t\tfont-size: 12px;\n\t\tfill: #999;\n\t}\n\n\t.x-axis text {\n\t\ttext-anchor: middle;\n\t}\n\n\t.y-axis text {\n\t\ttext-anchor: end;\n\t}\n</style>\n"
  ],
  "names": [],
  "mappings": "AAaC,MAAM,cAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CACxB,UAAU,CAAE,KAAK,CACjB,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC;AC6CD,GAAG,4BAAC,CAAC,AACJ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,IAAI,AACZ,CAAC,AAED,MAAM,4BAAC,CAAC,AACP,IAAI,CAAE,MAAM,CACZ,YAAY,CAAE,GAAG,CACjB,MAAM,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACxB,CAAC,AAED,mBAAK,CAAC,IAAI,cAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,CAAC,AACpB,CAAC,AAED,IAAI,4BAAC,CAAC,AACL,SAAS,CAAE,IAAI,CACf,IAAI,CAAE,IAAI,AACX,CAAC,AAED,qBAAO,CAAC,IAAI,cAAC,CAAC,AACb,WAAW,CAAE,MAAM,AACpB,CAAC,AAED,qBAAO,CAAC,IAAI,cAAC,CAAC,AACb,WAAW,CAAE,GAAG,AACjB,CAAC"
}